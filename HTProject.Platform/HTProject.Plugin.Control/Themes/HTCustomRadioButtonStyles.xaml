<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:HTProject.Plugin.Base.Converters;assembly=HTProject.Plugin.Base"
                    xmlns:controls="clr-namespace:HTProject.Plugin.Control.Controls">

    <converters:StringToCollapsedConverter x:Key="StringToCollapsedConverter" />

    <Style x:Key="HTRadioButton"
           TargetType="{x:Type controls:HTCustomRadioButton}">
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="ToggleButton.IsChecked"
                Value="False" />
        <Setter	Property="TxtToolTip"
                Value="SMEERadioButton" />
        <Setter	Property="FontSize"
                Value="16" />
        <Setter	Property="Foreground"
                Value="#4C4C4C" />
        <Setter	Property="FontFamily"
                Value="#PingFang SC Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HTCustomRadioButton}">
                    <StackPanel Name="Panel"
                                Orientation="Horizontal">
                        <Border Name="outerBorder"
                                BorderThickness="1"
                                BorderBrush="#A9A9AA"
                                Height="20"
                                Width="20"
                                CornerRadius="10">
                            <Border Name="innerBorder"
                                    BorderThickness="1"
                                    BorderBrush="#A9A9AA"
                                    Background="Transparent"
                                    CornerRadius="8"
                                    Margin="2"
                                    SnapsToDevicePixels="True" />
                        </Border>
                        <TextBlock Name="Txt"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center"
                                   Text="{Binding OptionTxt, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}" />
                        <FrameworkElement.ToolTip>
                            <controls:HTCustomToolTip ToolTipType="NormalToolTip"
                                                    Visibility="{Binding TxtToolTip,Converter={StaticResource StringToCollapsedConverter},RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{Binding TxtToolTip, RelativeSource={RelativeSource TemplatedParent}}" />
                        </FrameworkElement.ToolTip>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder"
                                    Property="Background"
                                    Value="#207DE6" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderBrush"
                                    Value="#3B7CC5" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter	TargetName="Txt"
                                    Property="Foreground"
                                    Value="#9F9F9F" />
                            <Setter TargetName="innerBorder"
                                    Property="Background"
                                    Value="#207DE6" />
                            <Setter Property="UIElement.Opacity"
                                    TargetName="innerBorder"
                                    Value="0.5" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter	TargetName="Txt"
                                    Property="Foreground"
                                    Value="#9F9F9F" />
                            <Setter TargetName="innerBorder"
                                    Property="Background"
                                    Value="#EDEDED" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="HTMainViewRadioButton"
           TargetType="{x:Type controls:HTImageRadioButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="#FFBCDDEE" />
        <Setter Property="Foreground"
                Value="#FF000000" />
        <Setter Property="BorderBrush"
                Value="#FFAEAFB0" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="FontFamily"
                Value="Microsoft JhengHei UI" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HTImageRadioButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image x:Name="image"
                                   Stretch="Uniform"
                                   Margin="5"
                                   Source="{Binding ImageRadioButton_Icon,Converter={StaticResource stringToImageSourceConverter},RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=controls:HTImageRadioButton}}"
                                   Width="{Binding ImageWidth,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=controls:HTImageRadioButton}}"
                                   Height="{Binding ImageHeight,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=controls:HTImageRadioButton}}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter RecognizesAccessKey="True"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="0"
                                              Name="content"
                                              Focusable="False"
                                              Grid.Row="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Panel.Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF4BA3FB</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF909192</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="Panel.Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF4BA3FB</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF727374</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF727374</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Image.Source"
                                    TargetName="image"
                                    Value="{Binding ImageRadioButton_MousePressedIcon,Converter={StaticResource stringToImageSourceConverter},RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=controls:HTImageRadioButton}}"></Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Panel.Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FF4BA3FB</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Image.Source"
                                    TargetName="image"
                                    Value="{Binding ImageRadioButton_MousePressedIcon,Converter={StaticResource stringToImageSourceConverter},RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=controls:HTImageRadioButton}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Panel.Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush>#FFADB2B5</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF838383</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource HTRadioButton}"
           TargetType="{x:Type controls:HTCustomRadioButton}"
           x:Key="{x:Type controls:HTCustomRadioButton}" />
    
    <Style BasedOn="{StaticResource HTMainViewRadioButton}"
           TargetType="{x:Type controls:HTImageRadioButton}"
           x:Key="{x:Type controls:HTImageRadioButton}" />
</ResourceDictionary>